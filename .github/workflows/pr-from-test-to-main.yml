name: Pull Request Checks
description: On pull request to test or main branches, run commit message check, lint check, format check and type check, then build and test the application

on:
    pull_request:
        branches: [main]

jobs:
    build:
        name: Build and test check
        runs-on: ubuntu-latest
        services:
            mysql:
                image: mysql:9.3
                ports:
                    - "3306:3306"
                env:
                    MYSQL_DATABASE: eco_service_db
                    MYSQL_USER: eco_service_user
                    MYSQL_PASSWORD: eco_service_password
                    MYSQL_ROOT_PASSWORD: root
                options: >-
                  --health-cmd="mysqladmin ping -h localhost -u root -proot"
                  --health-interval=5s
                  --health-timeout=5s
                  --health-retries=10
                  --health-start-period=60s
        env:
            # Used in the workflow
            DATABASE_URL: "mysql://eco_service_user:eco_service_password@127.0.0.1:3306/eco_service_db"
            NEXT_PUBLIC_BASE_URL: "http://localhost:3000"
            # Required to prevent errors
            BETTER_AUTH_SECRET: "session-encryption-key"
            PLUNK_API_KEY: "plunk-private-key"
            NEXT_PUBLIC_STRIPE_PUBLISHABLE_KEY: "pk_test_xxxxx"
            STRIPE_SECRET_KEY: "sk_test_pk_test_xxxxx"
            STRIPE_WEBHOOK_SECRET: "whsec_xxxxx"

        steps:
            - uses: actions/checkout@v4
            - id: setup-node-pnpm
              uses: ./.github/actions/setup-node-pnpm
            - id: setup-db-build
              uses: ./.github/actions/setup-db-build

    release:
        name: Create tag and release (manually before deploy to main)
        runs-on: ubuntu-latest
        needs: [build]
        if: github.event_name == 'workflow_dispatch'
        steps:
        - uses: actions/checkout@v4
        - id: setup-node-pnpm
          uses: ./.github/actions/setup-node-pnpm
        - run: pnpm dlx semantic-release
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
