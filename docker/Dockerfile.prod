####################
#       Base       #
####################
FROM node:18-alpine3.21 AS base
WORKDIR /app

# Install pnpm and MySQL client
RUN npm install -g pnpm
RUN apk add --no-cache mysql-client mariadb-connector-c

# Recommended libc6-compat for Alpine Linux
# https://github.com/nodejs/docker-node/tree/b4117f9333da4138b03a546ec926ef50a31506c3#nodealpine
RUN apk add --no-cache libc6-compat

####################
#   Dependencies   #
####################
FROM base AS deps

# Import packages and install dependencies
COPY package.json pnpm-lock.yaml ./
RUN pnpm install

####################
#     Builder      #
####################
FROM base AS builder

# Override the .env file
COPY .env.prod ./.env

# Copy dependencies and codebase
COPY package.json pnpm-lock.yaml ./
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Generate Prisma client
RUN pnpm run prisma:generate

# Build the application
# RUN pnpm run build

####################
#      Runner      #
####################
# FROM base AS runner

# # Install prod dependencies
# COPY package.json pnpm-lock.yaml ./
# RUN pnpm install --prod --ignore-scripts

# # Copy the built application
# COPY --from=builder /app/.env ./.env
# COPY --from=builder /app/.next ./.next
# COPY --from=builder /app/public ./public
# COPY --from=builder /app/prisma ./prisma
# COPY --from=builder /app/scripts ./scripts
# COPY --from=builder /app/tsconfig.json ./tsconfig.json
# COPY --from=builder /app/lib/prisma.ts ./lib/prisma.ts

####################
#    Run server    #
####################
CMD ["/bin/sh", "-c", "\
    pnpm run prisma:deploy && \
    pnpm run fixtures:reload && \
    pnpm run build && \
    pnpm run start \
"]
